# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-composite-run-steps-actions
# https://docs.github.com/en/rest/reference/pulls#merge-a-pull-request
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull_request
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_run

name: "Merge pull request"

description: "Merges a pull request"

inputs:
  github-token:
    description: "GitHub token of a user with permission to merge a pull request"
    required: true
  merge-method:
    default: "merge"
    description: "Which merge method to use, one \"merge\", \"rebase\", \"squash\""
    required: true

runs:
  using: "composite"

  steps:
    - name: "Determine pull request number"
      uses: "actions/github-script@v5"
      with:
        github-token: "${{ inputs.github-token }}"
        script: |
          if (context.eventName == 'pull_request') {
            core.exportVariable("PULL_REQUEST_NUMBER", context.payload.pull_request.number);

            return;
          }

          if (context.eventName == 'workflow_run') {
            core.exportVariable("PULL_REQUEST_NUMBER", context.payload.workflow_run.pull_requests[0].number);

            return;
          }

          core.setFailed(`Unable to determine the pull request number for event "${context.eventName}"`);

    - name: "Merge pull request"
      uses: "actions/github-script@v5"
      env:
        MERGE_METHOD: "${{ inputs.merge-method }}"
      with:
        github-token: "${{ inputs.github-token }}"
        script: |
          if (!process.env.PULL_REQUEST_NUMBER) {
            core.setFailed("The environment variable PULL_REQUEST_NUMBER is not defined.")

            return;
          }

          try {
            await github.rest.pulls.merge({
              merge_method: process.env.MERGE_METHOD,
              owner: context.repo.owner,
              pull_number: process.env.PULL_REQUEST_NUMBER,
              repo: context.repo.repo,
            });
          } catch (error) {
            core.setFailed(error.message);
          }
